#!/bash/bin


runUsage()
{
    echo "***********************************************"
    echo "***********************************************"
    echo "  Usage: "
    echo "     $0  \${MP4FilesDir} \${Option}"
    echo "***********************************************"
    echo "***********************************************"
}

runInitForFrame()
{
    let " FrameNumAll = 0"
    let " FrameNumI   = 0"
    let " FrameNumP   = 0"
    let " FrameNumB   = 0"

    #frame size statistic
    let " FrameSizeAll = 0"
    let " FrameSizeI   = 0"
    let " FrameSizeP   = 0"
    let " FrameSizeB   = 0"

    let " FrameSizeRatioI = 0"
    let " FrameSizeRatioP = 0"
    let " FrameSizeRatioB = 0"

    let"  FrameSizeAveI = 0"
    let"  FrameSizeAveP = 0"
    let"  FrameSizeAveB = 0"

    let " FrameSizeMaxI = 0"
    let " FrameSizeMaxP = 0"
    let " FrameSizeMaxB = 0"

    let " FrameSizeMinB = 0"
    let " FrameSizeMinB = 0"
    let " FrameSizeMinB = 0"

    #bit rate statistic
    let " FrameRateAver = 0"
    let " FrameRateIn1S = 0"
    let " FrameRateIn2S = 0"
    let " FrameRateIn3S = 0"
    let " FrameRateIn4S = 0"
    let " FrameRateIn5S = 0"
    let " FrameRateIn6S = 0"

    #PSNR statistic
    let " FramePSNRI = 0"
    let " FramePSNRP = 0"
    let " FramePSNRB = 0"

    let " FramePSNRMaxI =0"
    let " FramePSNRMaxP =0"
    let " FramePSNRMaxB =0"

    let " FramePSNRMinI =0"
    let " FramePSNRMinP =0"
    let " FramePSNRMinB =0"


    #frame QP statistic
    let " FrameQPI   = 0"
    let " FrameQPP   = 0"
    let " FrameQPB   = 0"

    let " FrameQPMaxI =0"
    let " FrameQPMaxP =0"
    let " FrameQPMaxB =0"

    let " FrameQPMinI =0"
    let " FrameQPMinP =0"
    let " FrameQPMinB =0"

    #headline for output statistic table
    FrameHeadline1_Size="FrameNum, , , ,FrameSize,,,, FrSizeRatio,,,,AvSize,,,MaxSize,,,MinSize,,,"
    FrameHeadline2_Size="All, I, P,  B, All, I, P, B, All, I, P, B,  I, P, B, I, P, B,  I, P, B,"
    FrameHeadline1_BitRate="Frame rate, , , , , , ,"
    FrameHeadline2_BitRate="aver, 1s, 2s, 3s, 4s, 5s, 6s,"
    FrameHeadline1_PSNR="Frame PSNR, , , , , , , , ,"
    FrameHeadline2_PSNR="I, P, B, MaxI, MaxP, MaxB, MinI, MinP, MinB,"
    FrameHeadline1_QP="Frame QP, , , , , , , , ,"
    FrameHeadline2_QP="I, P, B, MaxI, MaxP, MaxB, MinI, MinP, MinB"

    FrameHeadline1="${FrameHeadline1_Size} ${FrameHeadline1_BitRate} ${FrameHeadline1_PSNR} ${FrameHeadline1_QP}"
    FrameHeadline2="${FrameHeadline2_Size} ${FrameHeadline2_BitRate} ${FrameHeadline2_PSNR} ${FrameHeadline2_QP}"

}

runInitForSequence()
{
    #data extract from xxx.mp4_stream.csv file
    #for sequences level statistic
    Profile=""
    Level=""
    EnctrMode=""
    Resolution=""
    FrameRate=""
    Duration=""
    PSNR=""

    FrameNumAll=""
    FrameNumI=""
    FrameNumP=""
    FrameNumB=""

    FrameNumRatioI=""
    FrameNumRatioP=""
    FrameNumRatioB=""

    FrameSizeAverage=""
    FrameSizeAverageI=""
    FrameSizeAverageP=""
    FrameSizeAverageB=""

    CompressedRatio=""
    CompressedRatioI=""
    CompressedRatioP=""
    CompressedRatioB=""

    QPVer=""
    QPMin=""
    QPMax=""

    #headline for output statistic table
    SequenceHeadLine1_Basic="Basic info, , , , , , ,"
    SequenceHeadLine2_Basic="prof, level, EncM, Resol, FrRate, Dura,PSNR,"
    SequenceHeadLine1_Frame="FrameNum,,,,  FrameRatio,,,FrameSize,,,,CompressedRatio,,,, QP, , ,"
    SequenceHeadLine2_Frame="All, I, P, B, I,  P,  B,   Ave, I, P, B,  Ave,  I,  P,  B,  Ave, Max, Min,"

    SequenceHeadLine1="${SequenceHeadLine1_Basic} ${SequenceHeadLine1_Frame}"
    SequenceHeadLine2="${SequenceHeadLine2_Basic} ${SequenceHeadLine2_Frame}"

}

runInitForStatisticFile()
{
    DetailStaticFile="StaticInfoDetail.csv"
    SequenceStaticFile="StaticInfoForAllSequences.csv"
    FrameStatiFile="StaticInfoForAllFrames.csv"


    #frame index file generated by StreamEye
    # xxx.mp4_index.csv
    FrameIndexFile=""
    #stream report file generated by StreanEye
    #xxx.mp4_stream.csv
    StreamStaticFile=""

    #init output table with headline
    echo "${SequenceHeadLine1} ${FrameHeadline1}"  >${DetailStaticFile}
    echo "${SequenceHeadLine2} ${FrameHeadline2}" >>${DetailStaticFile}

    echo "${SequenceHeadLine1}"  >${SequenceStaticFile}
    echo "${SequenceHeadLine1}" >>${SequenceStaticFile}

    echo "${FrameHeadline1}"  >${FrameStatiFile}
    echo "${FrameHeadline2}" >>${FrameStatiFile}
}

runInit()
{
    runInitForFrame

    runInitForSequence

    runInitForStatisticFile

}


runCheck()
{
    if [ ! -d ${MP4FilesDir}  ]
    then
        echo "MP4FilesDir does not exist, please double check!"
        exit 1
    fi
}

runParseSequenceStaticInfo()
{
    if [ ! -e ${StreamStaticFile} ]
    then
        echo "****************************************************"
        echo "  ${StreamStaticFile} does not exist      "
        echo "  so skip to parse  stream info for ${mp4}"
        echo "****************************************************"
        return 0
    fi
}

runParseFrameStaticInfo()
{

    if [ ! -e ${FrameIndexFile} ]
    then
        echo "****************************************************"
        echo "  ${FrameIndexFile} does not exist             "
        echo "  so skip to parse frame static info for ${mp4}"
        echo "****************************************************"
        return 0
    fi


}

runParseStaticInfoForAllSequences()
{
    for mp4 in ${MP4FilesDir}/*.mp4
    do
        FrameIndexFile=${mp4}_index.csv
        StreamStaticFile=${mp4}_stream.csv

        echo "****************************************************"
        echo "  parsing mp4 file:   ${mp4}"
        echo "  frame index file:   ${FrameIndexFile}"
        echo "  stream static file: ${StreamStaticFile}"
        echo "****************************************************"

        runParseSequenceStaticInfo
        runParseFrameStaticInfo
    done

}

runMain()
{

    runInit
    runCheck

    runParseStaticInfoForAllSequences
}

#**********************************************************
#**********************************************************
MP4FilesDir=$1

runMain





